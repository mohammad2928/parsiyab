
import 'dart:io';

import 'package:excel/excel.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter_slidable/flutter_slidable.dart';
import 'package:parsiyab/pages/about.dart';
import 'package:parsiyab/pages/cart.dart';
import 'package:parsiyab/pages/contact_us.dart';
import 'package:parsiyab/pages/daily_word.dart';
import 'package:parsiyab/pages/faverit.dart';
import 'package:parsiyab/pages/poyesh.dart';
import 'package:provider/provider.dart';
import 'package:search_widget/search_widget.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'models.dart';
import 'package:flutter/services.dart';
import 'package:autocomplete_textfield/autocomplete_textfield.dart';

class SearchPage extends StatefulWidget {



  @override
  State<StatefulWidget> createState() {
    // TODO: implement createState
    return SearchPageState();
  }

}


class  SearchPageState extends State<SearchPage> with SingleTickerProviderStateMixin {

  final textController = TextEditingController();
  Color _faveritcolor = Colors.white;
  bool _show = false;
  bool autovisible =false;




  addToFaverit(BuildContext context) async{
    String word = textController.text.trim();
    var cart = Provider.of<Cart>(context);

    if (word != null && word != ' ' && word != '' && cart.words.contains(word)){
      final  _faverit = await SharedPreferences.getInstance();
      List<String> words = _faverit.getStringList('faverit') ?? [];
      words.add(word);
      await _faverit.setStringList("faverit", words);
      if (cart.words.contains(word)){
        Provider.of<Cart>(context, listen: false).word_colors[word] = Colors.red;

      }

    }

  }

  removeFromFaverit(BuildContext context) async{
    String word = textController.text.trim();
    var cart = Provider.of<Cart>(context);
    if(word != null && word != ' ' && word != '' && cart.words.contains(word)){
      final _faverit = await SharedPreferences.getInstance();
      List<String> words = _faverit.getStringList('faverit') ?? [];
      words.remove(word);
      await _faverit.setStringList("faverit", words);
      cart.word_colors[word] = Colors.white;
    }


  }
  getFaverit(BuildContext context) async{
    final cart = Provider.of<Cart>(context);
    final _faverit = await SharedPreferences.getInstance();
    List words = _faverit.getStringList('faverit') ?? [];
    print(words);
    cart.makeFaveritList(words);

  }

  @override
  void dispose() {
    // Clean up the controller when the widget is disposed.
    textController.dispose();
    super.dispose();
  }

  @override
  Widget search_widget(BuildContext context) {
    final cart = Provider.of<Cart>(context);

    if (_show == true && cart.found_item != null && textController.text.toString() != '') {
      print(cart.found_item.similar_words);
      return ListView.builder(

        itemCount: cart.found_item.similar_words.length,
        itemBuilder: (context, index) {
          final item = cart.found_item.similar_words[index];
          return new Text(
            item,style: TextStyle(fontSize: 20, color: Colors.black),

          );

        },
      );

    }
    return Container();
  }
  Widget search_widget1(BuildContext context) {
    final cart = Provider.of<Cart>(context);

    if (_show == true && cart.found_item != null && textController.text.toString() != '') {
      return  new Column(
        children: <Widget>[
          new Text(cart.found_item.language, style: TextStyle(
              fontSize: 20
          ),),
        ],
      );

    }
    return Container();
  }
  Widget search_widget2(BuildContext context) {
    final cart = Provider.of<Cart>(context);

    if (_show == true && cart.found_item != null && textController.text.toString() != '') {
      return  new Column(
        children: <Widget>[

          new Text(cart.found_item.spell_word, style: TextStyle(
              fontSize: 20
          ),),
        ],
      );

    }
    return Container();
  }

  Widget menu_widget(BuildContext context){
    final cart = Provider.of<Cart>(context);
    double _width = MediaQuery.of(context).size.width;
    double _height = MediaQuery.of(context).size.height;
    Color _menu_color = _colorFromHex('#A464A6');
    double _menu_font_size = 11.5;
    return(
      Row(
        mainAxisAlignment: MainAxisAlignment.end,
        children: <Widget>[
          new Container(
            width: _width*0.005,
          ),

          new SizedBox(
            child: new RaisedButton(

              textColor: Colors.white,
              color:  _menu_color,
              onPressed:   null,
              child: new Text("جستجو",
              style: TextStyle(fontSize: _menu_font_size),
              ),
            ),
            width: _width/6
          ),
          new Container(
            width: _width*0.004,
          ),
          new SizedBox(
            child: new RaisedButton(

              textColor: Colors.white,
              color:  _menu_color,
              onPressed:   (){
                cart.random_word();
                Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => dailyWord()),
              );},
              child: new Text("واژه روز",
                style: TextStyle(fontSize: _menu_font_size),
              ),
            ),
            width: _width/5.8,
          ) ,
          new Container(width: _width*0.004,),
          new SizedBox(
            child: new RaisedButton(

              textColor: Colors.white,
              color:  _menu_color,
              onPressed:  (){
                getFaverit(context);
                Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => faverit()),
              );},
              child: new Text("پسندها",
                style: TextStyle(fontSize: _menu_font_size),
              ),
            ),
            width: _width/6.3,
          ) ,
          new Container(width: _width*0.004,),
          new SizedBox(
            child: new RaisedButton(

              textColor: Colors.white,
              color:  _menu_color,
              onPressed:   (){  Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => poyesh()),
              );},
              child: new Text("پویشگری",
                style: TextStyle(fontSize: _menu_font_size),
              ),
            ),
            width: _width/5.6,
          ) ,
          new Container(width: _width*0.004,),
          new SizedBox(
            child: new RaisedButton(

              textColor: Colors.white,
              color:  _menu_color,
              onPressed: (){  Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => about()),
              );},
              child: new Text("درباره",
                style: TextStyle(fontSize: _menu_font_size),
              ),
            ),
            width: _width/6.8,
          ) ,
          new Container(width: _width*0.004,),
          new SizedBox(
            child: new RaisedButton(

              textColor: Colors.white,
              color:  _menu_color,
              onPressed: (){  Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => contactUs()),
              );},
              child: new Text("تماس", style: TextStyle(fontSize: _menu_font_size),),
            ),
            width: _width/7.1,
          ) ,
          new Container(width: _width*0.009,),



        ],
      )

    );

  }
  Color _colorFromHex(String hexColor) {
    final hexCode = hexColor.replaceAll('#', '');
    return Color(int.parse('FF$hexCode', radix: 16));
  }


  @override
  Widget build(BuildContext context) {
    var cart = Provider.of<Cart>(context);
    double _width = MediaQuery.of(context).size.width;
    double _height = MediaQuery.of(context).size.height;
    Color _menu_color = _colorFromHex('#A464A6');
    test(BuildContext context){
      final cart = Provider.of<Cart>(context);
      print(cart.word_colors);
      return Container();
    }

    Widget autocomplete(BuildContext context){
      List<String> out_test = [];
      if (textController.text.trim() != '' ){
        for(var item in cart.words){
          if (item.contains(textController.text.trim())){out_test.add(item);}
        }
        setState(() {
          autovisible = true;
        });

        return Container(
          height: _height*0.2,
          child: ListView(
            children: <Widget>[
              for (var item in out_test) new Text(item)
            ],
          ),
        );
      }
      else{

        setState(() {
          autovisible = false;
        });

        return Container();
      }

    }
    return new Scaffold(

        backgroundColor: _colorFromHex("DFD8E8"),


        body: new ListView(
          children: <Widget>[
            new Column(

              children: <Widget>[
                new Container(
                  width: _width*0.8,
                  height: _height*0.20,
                  decoration: new BoxDecoration(
                   image: new DecorationImage(
                     image: new AssetImage("assets/images/logo_text.png"),
                        fit: BoxFit.fill,),

                       ),
                ),
                menu_widget(context),
                new Column(
                  children: <Widget>[
                    new Row(
                      mainAxisAlignment: MainAxisAlignment.start,

                      children: <Widget>[
                        new Container(
                          width: _width*0.05,
                        ),

                        new GestureDetector(
                          child: new Image(image: AssetImage('assets/images/search.png')
                            , width: _width*0.17, height: _height*0.1,),
                          onTap: (){
                            print(textController.text);
                            cart.search(textController.text);
                            setState(() { _show = true; });
                            print(_show);
                          },
                        ),
                        new Container(width: _width*0.04,),
                        new Container(
                            decoration: BoxDecoration(
                              border: Border.all(color: Colors.white),
                              boxShadow: [
                                BoxShadow(
                                  color: Colors.grey.withOpacity(0.5),
                                  spreadRadius: 5,
                                  blurRadius: 7,
                                  offset: Offset(0, 3), // changes position of shadow
                                ),
                              ],
                            ),


                            child: new Container(
                              color: Colors.white,
                              height: _height*0.05,
                              child: TextField(
                                controller: textController,
                                decoration: InputDecoration(

                                  hintText: 'جستجو',
                                  //border:  OutlineInputBorder(borderRadius: BorderRadius.circular(32.0)),


                                ),

                                autofocus: false,

                                onSubmitted: (text){

                                  cart.search(text);
                                  setState(() { _show = true; });

                                },


                              ),
                              width: _width*0.60,


                            )

                        ),
                        new IconButton(icon: Icon(Icons.search, size: 25), onPressed: (){})



                      ],
                    ),

                  ],
                ),
                new Container(
                  height: _height*0.0001,
                ),
                new Column(
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: <Widget>[
                   new Container(
                     height: 1,
                     width: _width*0.9,
                     color: _menu_color,
                   ),
                    new Container(
                      height: 3,
                    ),
                    new Container(
                      height: 1,
                      width: _width*0.9,
                      color: _menu_color,
                    )


                  ],
                ),
                new Container(
                  height: _height*0.001,
                ),
                new Row(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: <Widget>[
                    new Container(
                      width: _width*0.05,
                    ),
                    new Column(
                      children: <Widget>[
                        new Text('واژه های پارسی',
                        style: TextStyle(
                          fontSize: 25, color: Colors.indigo, fontWeight: FontWeight.bold
                        ),),
                        new Container(
                          height: _height*0.44,
                          width: _width*0.45,

                          decoration: BoxDecoration(
                            color: _colorFromHex('#b4aca4'),
                              border: Border.all(color: Colors.black87, width: 1)
                          ),
                          child: search_widget(context),


                        ),
                      ],
                    ),
                    new Container(
                      width: _width*0.04,
                    ),
                    new Column(
                      children: <Widget>[
                        new Text('زبان بنیادی',
                          style: TextStyle(
                            fontSize: 25, color: Colors.indigo, fontWeight: FontWeight.bold
                          ),),
                        new Container(
                          height: _height*0.08,
                          width: _width*0.41,

                          decoration: BoxDecoration(
                            color: _colorFromHex('#b4aca4'),
                              border: Border.all(color: Colors.black87, width: 1)
                          ),
                          child: search_widget1(context),

                        ),
                        new Container(
                          height: _height*0.02,
                        ),
                        new Text('روش نوشتاری',
                          style: TextStyle(
                            fontSize: 25, color: Colors.indigo, fontWeight: FontWeight.bold,
                          ),),
                        new Container(
                          height: _height*0.08,
                          width: _width*0.41,

                          decoration: BoxDecoration(
                              color: _colorFromHex('#b4aca4'),
                              border: Border.all(color: Colors.black87, width: 1)
                          ),
                          child: search_widget2(context),

                        ),
                        new Container(
                          height: _height*0.05,
                        ),
                        new Column(
                          children: <Widget>[
                            test(context),
                            new Text('    پسند', style: TextStyle(
                                fontSize: 20, color: Colors.black, fontWeight: FontWeight.bold
                            ),),
                            new IconButton(
                                icon: new Icon(Icons.favorite,
                                  color: cart.word_color(textController.text.trim()), size: _width*0.13,),
                                onPressed: (){
                                  showDialog(
                                      context: context,
                                      builder: (context) {
                                        Future.delayed(Duration(milliseconds: 500), () {
                                          Navigator.of(context).pop(true);
                                        });
                                        if (cart.word_color(textController.text.trim()) == Colors.red){


                                          return AlertDialog(

                                            title: Text('به لیست پسندها اظافه شد'),
                                          );
                                        }
                                        else if (cart.words.contains(textController.text.trim())) {
                                          return AlertDialog(
                                            title: Text(
                                                'از لیست پسندها حذف شد'),
                                          );
                                        }
                                        else{
                                          return AlertDialog(
                                            title: Text(
                                                'کلمه انتخاب شده وجود ندارد '),
                                          );
                                        }
                                      });
                                  if (cart.word_color(textController.text.trim()) == Colors.white){

                                    setState(() {
                                      addToFaverit(context);
                                    });
                                  }
                                  else{
                                    setState(() {
                                      removeFromFaverit(context);
                                    });

                                  }

                                }),
                          ],
                        ),
                      ],
                    ),

                  ],
                ),




              ],

            ),


          ],
        ),


    );
  }







}


